In PostgreSQL, joins are used to combine rows from two or more tables based on a related column between them. Here are the different types of joins available in PostgreSQL:

-------------------------------------JOINS-------------------------------------

INNER JOIN: Returns rows that have matching values in both tables.

SELECT a.column1, b.column2
FROM table1 a
INNER JOIN table2 b
ON a.common_column = b.common_column;

LEFT JOIN (or LEFT OUTER JOIN): Returns all rows from the left table and the matched rows from the right table. If no match is found, NULL values are returned for columns from the right table.

SELECT a.column1, b.column2
FROM table1 a
LEFT JOIN table2 b
ON a.common_column = b.common_column;

RIGHT JOIN (or RIGHT OUTER JOIN): Returns all rows from the right table and the matched rows from the left table. If no match is found, NULL values are returned for columns from the left table.

SELECT a.column1, b.column2
FROM table1 a
RIGHT JOIN table2 b
ON a.common_column = b.common_column;

FULL JOIN (or FULL OUTER JOIN): Returns all rows when there is a match in one of the tables. It returns NULL values if there is no match.

SELECT a.column1, b.column2
FROM table1 a
FULL JOIN table2 b
ON a.common_column = b.common_column;

CROSS JOIN: Returns the Cartesian product of both tables. Each row from the first table is combined with all rows from the second table.

SELECT a.column1, b.column2
FROM table1 a
CROSS JOIN table2 b;

SELF JOIN: A regular join but the table is joined with itself.

SELECT a.column1, b.column2
FROM table1 a, table1 b
WHERE a.common_column = b.common_column;

